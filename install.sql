-- ----------------------------
-- Table structure for client
-- ----------------------------
CREATE TABLE "client" (
  "client_id" int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "company_id" int8 NOT NULL,
  "name" text NOT NULL,
  "user_id" int8,
  "token" text NOT NULL,
  "data" jsonb NOT NULL
);
COMMENT ON COLUMN "client"."client_id" IS 'Identifier';
COMMENT ON COLUMN "client"."company_id" IS 'Company';
COMMENT ON COLUMN "client"."name" IS 'Client name';
COMMENT ON COLUMN "client"."user_id" IS 'User';
COMMENT ON COLUMN "client"."token" IS 'API token';
COMMENT ON COLUMN "client"."data" IS 'Addition data';
COMMENT ON TABLE "client" IS 'Client of company';

-- ----------------------------
-- Table structure for company
-- ----------------------------
CREATE TABLE "company" (
  "company_id" int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "code" text NOT NULL,
  "name" text NOT NULL,
  "point" int8 NOT NULL,
  "point_rate" int8 NOT NULL
);
COMMENT ON COLUMN "company"."company_id" IS 'Identifier';
COMMENT ON COLUMN "company"."code" IS 'Company ID';
COMMENT ON COLUMN "company"."name" IS 'Company name';
COMMENT ON COLUMN "company"."point" IS 'The number of points remaining on the balance';
COMMENT ON COLUMN "company"."point_rate" IS 'Point rate (Tariff)';
COMMENT ON TABLE "company" IS 'Companies';

-- ----------------------------
-- Table structure for expense
-- ----------------------------
CREATE TABLE "expense" (
  "expense_id" int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "date" timestamptz(6) NOT NULL,
  "point" int8 NOT NULL,
  "request_id" int8 NOT NULL,
  "company_id" int8 NOT NULL
);
COMMENT ON COLUMN "expense"."expense_id" IS 'Identifier';
COMMENT ON COLUMN "expense"."date" IS 'Date';
COMMENT ON COLUMN "expense"."point" IS 'Points';
COMMENT ON COLUMN "expense"."request_id" IS 'Request data';
COMMENT ON COLUMN "expense"."company_id" IS 'Company';
COMMENT ON TABLE "expense" IS 'Expense of request';

-- ----------------------------
-- Table structure for payment
-- ----------------------------
DROP TABLE IF EXISTS "payment";
CREATE TABLE "payment" (
  "payment_id" int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "company_id" int8 NOT NULL,
  "date" timestamptz(6) NOT NULL,
  "sum" int8 NOT NULL,
  "point" int8 NOT NULL,
  "data" jsonb NOT NULL
);
COMMENT ON COLUMN "payment"."payment_id" IS 'Identifier';
COMMENT ON COLUMN "payment"."company_id" IS 'Company';
COMMENT ON COLUMN "payment"."date" IS 'Date of payment';
COMMENT ON COLUMN "payment"."sum" IS 'Money';
COMMENT ON COLUMN "payment"."point" IS 'Points';
COMMENT ON COLUMN "payment"."data" IS 'Addition data';
COMMENT ON TABLE "payment" IS 'Company payment';

-- ----------------------------
-- Table structure for product
-- ----------------------------
CREATE TABLE "product" (
  "product_id" int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "site_id" int8 NOT NULL,
  "code" text NOT NULL,
  "vendor_id" int8 NOT NULL,
  "vendor_code" text NOT NULL,
  "product_category_id" int8 NOT NULL,
  "updated" timestamptz(6) NOT NULL,
  "data" jsonb NOT NULL
);
COMMENT ON COLUMN "product"."product_id" IS 'Identifier';
COMMENT ON COLUMN "product"."site_id" IS 'Site';
COMMENT ON COLUMN "product"."code" IS 'Code of product';
COMMENT ON COLUMN "product"."vendor_id" IS 'Vendor';
COMMENT ON COLUMN "product"."vendor_code" IS 'Code of vendor';
COMMENT ON COLUMN "product"."product_category_id" IS 'Category of product';
COMMENT ON COLUMN "product"."updated" IS 'Updated date time with time zone';
COMMENT ON COLUMN "product"."data" IS 'Addition date';
COMMENT ON TABLE "product" IS 'Products';

-- ----------------------------
-- Table structure for product_category
-- ----------------------------
DROP TABLE IF EXISTS "product_category";
CREATE TABLE "product_category" (
  "product_category_id" int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "parent" int8,
  "site_id" int8 NOT NULL,
  "name" text NOT NULL,
  "url" text NOT NULL,
  "data" jsonb NOT NULL
);
COMMENT ON COLUMN "product_category"."product_category_id" IS 'Identifier';
COMMENT ON COLUMN "product_category"."parent" IS 'Parent product category';
COMMENT ON COLUMN "product_category"."site_id" IS 'Sites';
COMMENT ON COLUMN "product_category"."name" IS 'Name';
COMMENT ON COLUMN "product_category"."url" IS 'URL';
COMMENT ON COLUMN "product_category"."data" IS 'Addition data';
COMMENT ON TABLE "product_category" IS 'Product category';

-- ----------------------------
-- Table structure for product_content
-- ----------------------------
CREATE TABLE "product_content" (
  "product_content_id" int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "product_id" int8 NOT NULL,
  "lang_id" int8 NOT NULL,
  "data" jsonb NOT NULL,
  "changed" timestamptz(6) NOT NULL
);
COMMENT ON COLUMN "product_content"."product_content_id" IS 'Identifier';
COMMENT ON COLUMN "product_content"."product_id" IS 'Product';
COMMENT ON COLUMN "product_content"."lang_id" IS 'Language';
COMMENT ON COLUMN "product_content"."data" IS 'Json content';
COMMENT ON COLUMN "product_content"."changed" IS 'Last change';
COMMENT ON TABLE "product_content" IS 'Product content';

-- ----------------------------
-- Table structure for product_price
-- ----------------------------
CREATE TABLE "product_price" (
  "product_price_id" int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "product_id" int8 NOT NULL,
  "price" int8 NOT NULL,
  "stock" bool NOT NULL,
  "data" jsonb NOT NULL,
  "updated" timestamptz(6) NOT NULL,
  "changed_price" timestamptz(6) NOT NULL,
  "changed_stock" timestamptz(6) NOT NULL
);
COMMENT ON COLUMN "product_price"."product_price_id" IS 'Identifier';
COMMENT ON COLUMN "product_price"."product_id" IS 'Product';
COMMENT ON COLUMN "product_price"."price" IS 'Price (The minimum size of the monetary unit)';
COMMENT ON COLUMN "product_price"."stock" IS 'Stock';
COMMENT ON COLUMN "product_price"."data" IS 'Addition data';
COMMENT ON COLUMN "product_price"."updated" IS 'Date of check';
COMMENT ON COLUMN "product_price"."changed_price" IS 'Last change price';
COMMENT ON COLUMN "product_price"."changed_stock" IS 'Last change stock';
COMMENT ON TABLE "product_price" IS 'Product price';

-- ----------------------------
-- Table structure for product_price_history
-- ----------------------------
DROP TABLE IF EXISTS "product_price_history";
CREATE TABLE "product_price_history" (
  "product_price_history_id" int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "product_id" int8 NOT NULL,
  "price" int8 NOT NULL,
  "stock" bool NOT NULL,
  "changed_price" timestamptz(6) NOT NULL,
  "changed_stock" timestamptz(6) NOT NULL
);
COMMENT ON COLUMN "product_price_history"."product_price_history_id" IS 'Identifier';
COMMENT ON COLUMN "product_price_history"."product_id" IS 'Product';
COMMENT ON COLUMN "product_price_history"."price" IS 'Price (The minimum size of the monetary unit)';
COMMENT ON COLUMN "product_price_history"."stock" IS 'Stock';
COMMENT ON COLUMN "product_price_history"."changed_price" IS 'Last change price';
COMMENT ON COLUMN "product_price_history"."changed_stock" IS 'Last change stock';
COMMENT ON TABLE "product_price_history" IS 'Product price history';

-- ----------------------------
-- Table structure for request
-- ----------------------------
CREATE TABLE "request" (
  "request_id" int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "date" timestamptz(6) NOT NULL,
  "company_id" int8 NOT NULL,
  "site_id" int8 NOT NULL,
  "products" jsonb NOT NULL,
  "products_new" jsonb NOT NULL,
  "request_type_id" int8 NOT NULL,
  "http_request" text NOT NULL,
  "http_response" text NOT NULL,
  "tariff_id" int8 NOT NULL,
  "point" int8 NOT NULL
);
COMMENT ON COLUMN "request"."request_id" IS 'Identifier';
COMMENT ON COLUMN "request"."date" IS 'Date of request';
COMMENT ON COLUMN "request"."company_id" IS 'Company';
COMMENT ON COLUMN "request"."site_id" IS 'Site';
COMMENT ON COLUMN "request"."products" IS 'List of products';
COMMENT ON COLUMN "request"."products_new" IS 'List of new products';
COMMENT ON COLUMN "request"."request_type_id" IS 'Request type';
COMMENT ON COLUMN "request"."http_request" IS 'HTTP raw request';
COMMENT ON COLUMN "request"."http_response" IS 'HTTP raw answer';
COMMENT ON COLUMN "request"."tariff_id" IS 'Tariff';
COMMENT ON COLUMN "request"."point" IS 'Points';
COMMENT ON TABLE "request" IS 'Requests from clients';

-- ----------------------------
-- Table structure for request_type
-- ----------------------------
CREATE TABLE "request_type" (
  "request_type_id" int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "name" text NOT NULL
);
COMMENT ON COLUMN "request_type"."request_type_id" IS 'Identifier';
COMMENT ON COLUMN "request_type"."name" IS 'Name';
COMMENT ON TABLE "request_type" IS 'Request type from client';

-- ----------------------------
-- Table structure for site
-- ----------------------------
CREATE TABLE "site" (
  "site_id" int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "name" text NOT NULL,
  "url" text NOT NULL,
  "data" jsonb NOT NULL
);
COMMENT ON COLUMN "site"."site_id" IS 'Identifier';
COMMENT ON COLUMN "site"."name" IS 'Name';
COMMENT ON COLUMN "site"."url" IS 'Url';
COMMENT ON COLUMN "site"."data" IS 'Addition data';
COMMENT ON TABLE "site" IS 'Sites for parsing';

INSERT INTO "site" VALUES (1, 'Інтернет-магазин ROZETKA™', 'https://rozetka.com.ua/ua/', '{}');

-- ----------------------------
-- Table structure for tariff
-- ----------------------------
CREATE TABLE "tariff" (
  "tariff_id" int8 NOT NULL GENERATED ALWAYS AS IDENTITY,
  "date" timestamptz(6) NOT NULL,
  "request_type_id" int8 NOT NULL,
  "point" int8 NOT NULL,
  "number" int8 NOT NULL
);
COMMENT ON COLUMN "tariff"."tariff_id" IS 'Identifier';
COMMENT ON COLUMN "tariff"."date" IS 'Date of tariff';
COMMENT ON COLUMN "tariff"."request_type_id" IS 'Request type';
COMMENT ON COLUMN "tariff"."point" IS 'Point';
COMMENT ON COLUMN "tariff"."number" IS 'Number of request/product';
COMMENT ON TABLE "tariff" IS 'Tariff';

-- ----------------------------
-- Table structure for vendor
-- ----------------------------
CREATE TABLE "vendor" (
  "vendor_id" int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  "name" text NOT NULL
);
COMMENT ON COLUMN "vendor"."vendor_id" IS 'Identifier';
COMMENT ON COLUMN "vendor"."name" IS 'Name';
COMMENT ON TABLE "vendor" IS 'Vendors';

CREATE OR REPLACE FUNCTION "update_product_price_history"()
  RETURNS "trigger" AS $BODY$
BEGIN
    IF NEW.price <> OLD.price OR NEW.stock <> OLD.stock OR OLD.price IS NULL OR OLD.stock IS NULL THEN
        INSERT INTO product_price_history (product_id, price, stock, changed_price, changed_stock) VALUES (NEW.product_id, NEW.price, NEW.stock, NEW.changed_price, NEW.changed_stock);
    END IF;
    RETURN NEW;
END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;

-- ----------------------------
-- Auto increment value
-- ----------------------------
SELECT setval('"site_site_id_seq"', 1, true);

-- ----------------------------
-- Indexes structure for table client
-- ----------------------------
CREATE INDEX ON "client" USING btree ("company_id");
CREATE UNIQUE INDEX ON "client" USING btree ("company_id", "name");
CREATE UNIQUE INDEX ON "client" USING btree ("token");
CREATE UNIQUE INDEX ON "client" USING btree ("user_id");
ALTER TABLE "client" ADD CONSTRAINT "client_pkey" PRIMARY KEY ("client_id");

-- ----------------------------
-- Indexes structure for table company
-- ----------------------------
CREATE UNIQUE INDEX ON "company" USING btree ("code");
ALTER TABLE "company" ADD CONSTRAINT "company_pkey" PRIMARY KEY ("company_id");

-- ----------------------------
-- Indexes structure for table expense
-- ----------------------------
CREATE INDEX ON "expense" USING btree ("company_id");
CREATE UNIQUE INDEX ON "expense" USING btree ("request_id");
ALTER TABLE "expense" ADD CONSTRAINT "expense_pkey" PRIMARY KEY ("expense_id");

-- ----------------------------
-- Indexes structure for table payment
-- ----------------------------
CREATE INDEX ON "payment" USING btree ("company_id");
ALTER TABLE "payment" ADD CONSTRAINT "payment_pkey" PRIMARY KEY ("payment_id");

-- ----------------------------
-- Indexes structure for table product
-- ----------------------------
CREATE INDEX ON "product" USING btree ("code");
CREATE INDEX ON "product" USING btree ("product_category_id");
CREATE UNIQUE INDEX ON "product" USING btree ("site_id", "code");
CREATE INDEX ON "product" USING btree ("site_id");
CREATE INDEX ON "product" USING btree ("updated");
CREATE INDEX ON "product" USING btree ("vendor_code");
CREATE INDEX ON "product" USING btree ("vendor_id");
ALTER TABLE "product" ADD CONSTRAINT "product_pkey" PRIMARY KEY ("product_id");

-- ----------------------------
-- Indexes structure for table product_category
-- ----------------------------
CREATE INDEX ON "product_category" USING btree ("parent");
CREATE INDEX ON "product_category" USING btree ("site_id");
CREATE UNIQUE INDEX ON "product_category" USING btree ("site_id", "url");
ALTER TABLE "product_category" ADD CONSTRAINT "product_category_pkey" PRIMARY KEY ("product_category_id");

-- ----------------------------
-- Indexes structure for table product_content
-- ----------------------------
CREATE INDEX ON "product_content" USING btree ("lang_id");
CREATE UNIQUE INDEX ON "product_content" USING btree ("product_id");
ALTER TABLE "product_content" ADD CONSTRAINT "product_content_pkey" PRIMARY KEY ("product_content_id");

-- ----------------------------
-- Indexes structure for table product_price
-- ----------------------------
CREATE INDEX ON "product_price" USING btree ("changed_price");
CREATE INDEX ON "product_price" USING btree ("changed_stock");
CREATE UNIQUE INDEX ON "product_price" USING btree ("product_id");
CREATE TRIGGER "product_price_update_product_price_history" AFTER INSERT OR UPDATE ON "product_price" FOR EACH ROW EXECUTE PROCEDURE "update_product_price_history"();
ALTER TABLE "product_price" ADD CONSTRAINT "product_price_pkey" PRIMARY KEY ("product_price_id");

-- ----------------------------
-- Indexes structure for table product_price_history
-- ----------------------------
CREATE INDEX ON "product_price_history" USING btree ("changed_price");
CREATE INDEX ON "product_price_history" USING btree ("changed_stock");
CREATE INDEX ON "product_price_history" USING btree ("product_id");
ALTER TABLE "product_price_history" ADD CONSTRAINT "product_price_history_pkey" PRIMARY KEY ("product_price_history_id");

-- ----------------------------
-- Indexes structure for table request
-- ----------------------------
CREATE INDEX ON "request" USING btree ("company_id");
CREATE INDEX ON "request" USING btree ("date");
CREATE INDEX ON "request" USING btree ("request_type_id");
CREATE INDEX ON "request" USING btree ("site_id");
CREATE INDEX ON "request" USING btree ("tariff_id");
ALTER TABLE "request" ADD CONSTRAINT "request_pkey" PRIMARY KEY ("request_id");

-- ----------------------------
-- Indexes structure for table request_type
-- ----------------------------
CREATE UNIQUE INDEX ON "request_type" USING btree ("name");
ALTER TABLE "request_type" ADD CONSTRAINT "request_type_pkey" PRIMARY KEY ("request_type_id");

-- ----------------------------
-- Indexes structure for table site
-- ----------------------------
CREATE UNIQUE INDEX ON "site" USING btree ("url");
ALTER TABLE "site" ADD CONSTRAINT "site_pkey" PRIMARY KEY ("site_id");

-- ----------------------------
-- Indexes structure for table tariff
-- ----------------------------
CREATE INDEX ON "tariff" USING btree ("date");
CREATE UNIQUE INDEX ON "tariff" USING btree ("date", "request_type_id");
CREATE INDEX ON "tariff" USING btree ("request_type_id");
ALTER TABLE "tariff" ADD CONSTRAINT "tariff_pkey" PRIMARY KEY ("tariff_id");

-- ----------------------------
-- Indexes structure for table vendor
-- ----------------------------
CREATE UNIQUE INDEX ON "vendor" USING btree ("name");
ALTER TABLE "vendor" ADD CONSTRAINT "Vendor_pkey" PRIMARY KEY ("vendor_id");

-- ----------------------------
-- Foreign Keys structure
-- ----------------------------
ALTER TABLE "client" ADD CONSTRAINT "client_company_id_fkey" FOREIGN KEY ("company_id") REFERENCES "company" ("company_id");
ALTER TABLE "client" ADD CONSTRAINT "client_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "user" ("user_id");
ALTER TABLE "expense" ADD CONSTRAINT "expense_company_id_fkey" FOREIGN KEY ("company_id") REFERENCES "company" ("company_id");
ALTER TABLE "payment" ADD CONSTRAINT "payment_company_id_fkey" FOREIGN KEY ("company_id") REFERENCES "company" ("company_id");
ALTER TABLE "product" ADD CONSTRAINT "product_product_category_id_fkey" FOREIGN KEY ("product_category_id") REFERENCES "product_category" ("product_category_id");
ALTER TABLE "product" ADD CONSTRAINT "product_site_id_fkey" FOREIGN KEY ("site_id") REFERENCES "site" ("site_id");
ALTER TABLE "product" ADD CONSTRAINT "product_vendor_id_fkey" FOREIGN KEY ("vendor_id") REFERENCES "vendor" ("vendor_id");
ALTER TABLE "product_category" ADD CONSTRAINT "product_category_parent_fkey" FOREIGN KEY ("parent") REFERENCES "product_category" ("product_category_id");
ALTER TABLE "product_category" ADD CONSTRAINT "product_category_site_id_fkey" FOREIGN KEY ("site_id") REFERENCES "site" ("site_id");
ALTER TABLE "product_content" ADD CONSTRAINT "product_content_lang_id_fkey" FOREIGN KEY ("lang_id") REFERENCES "lang" ("lang_id");
ALTER TABLE "product_content" ADD CONSTRAINT "product_content_product_id_fkey" FOREIGN KEY ("product_id") REFERENCES "product" ("product_id");
ALTER TABLE "product_price" ADD CONSTRAINT "product_price_product_id_fkey" FOREIGN KEY ("product_id") REFERENCES "product" ("product_id");
ALTER TABLE "product_price_history" ADD CONSTRAINT "product_price_history_product_id_fkey" FOREIGN KEY ("product_id") REFERENCES "product" ("product_id");
ALTER TABLE "request" ADD CONSTRAINT "request_company_id_fkey" FOREIGN KEY ("company_id") REFERENCES "company" ("company_id");
ALTER TABLE "request" ADD CONSTRAINT "request_request_type_id_fkey" FOREIGN KEY ("request_type_id") REFERENCES "request_type" ("request_type_id");
ALTER TABLE "request" ADD CONSTRAINT "request_site_id_fkey" FOREIGN KEY ("site_id") REFERENCES "site" ("site_id");
ALTER TABLE "request" ADD CONSTRAINT "request_tariff_id_fkey" FOREIGN KEY ("tariff_id") REFERENCES "tariff" ("tariff_id");
ALTER TABLE "tariff" ADD CONSTRAINT "tariff_request_type_id_fkey" FOREIGN KEY ("request_type_id") REFERENCES "request_type" ("request_type_id");